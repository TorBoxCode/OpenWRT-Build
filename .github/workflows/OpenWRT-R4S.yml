name: OpenWRT-R4S

on:
  #schedule:
  #  - cron: '00 10 * * *'
  watch:
   types: started

jobs:
  build:
    name: Build OpenWRT
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Init Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          
      - name: Get Source Code
        run: |
          git clone -b master --single-branch https://github.com/Lienol/openwrt openwrt
          git clone https://github.com/TorBoxCode/luci-app-eqos openwrt/package/luci-app-eqos
          git clone https://github.com/TorBoxCode/luci-app-tencentddns openwrt/package/luci-app-tencentddns
          git clone https://github.com/frainzy1477/luci-app-trojan openwrt/package/luci-app-trojan
          git clone https://github.com/frainzy1477/luci-app-clash openwrt/package/luci-app-clash
          cd openwrt/
          ./scripts/feeds clean
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
      - name: Custom Configuration
        run: |
          cp -f All/CONFIG_R4S.ini openwrt/.config
          #chmod +x All/Customize.sh && sh All/Customize.sh
      
      - name: Build OpenWRT
        run: |
          cd openwrt/
          make defconfig
          make download -j8
          find dl -size -1024c -exec rm -f {} \;
          make -j$(nproc) || make -j1 V=s
      
      - name: Prepare Artifact
        run: find openwrt/bin/targets/ -type d -name "packages" | xargs rm -rf {}
          
      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: OpenWRT-R4S
          path: openwrt/bin/targets/
          #rockchip/armv8/
